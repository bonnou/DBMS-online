apply plugin: 'java'

// for doma-spring-boot-starter
processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources

buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()

		// for doma-spring-boot-starter
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
	baseName = 'dbms-online'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
//	compile('org.springframework.boot:spring-boot-starter-actuator')
//	compile('org.springframework.boot:spring-boot-starter-batch')
//	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.projectlombok:lombok:1.16.6')
//	compile('org.springframework.boot:spring-boot-starter-social-twitter')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter')
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile('com.google.code.gson:gson:2.6.2')
	compile('org.lazyluke:log4jdbc-remix:0.2.7')
	// for doma-spring-boot-starter
	compile('org.seasar.doma.boot:doma-spring-boot-starter:1.0.2')
//	compile('org.flywaydb:flyway-core:3.0')

    // for twitter oauth
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.security.oauth:spring-security-oauth2')
}

/*
eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
*/

task wrapper(type: Wrapper) {
	gradleVersion = '2.12'
}

// for heroku
apply plugin: 'application'
mainClassName = "net.in.ahr.DbmsApp" +
		""
applicationName = "DBMS-online"
task stage (dependsOn : ['clean', 'installApp'])
stage.finalizedBy build
